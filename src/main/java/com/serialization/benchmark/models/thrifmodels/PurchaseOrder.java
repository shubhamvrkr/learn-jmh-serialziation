package com.serialization.benchmark.models.thrifmodels;

/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2019-10-30")
public class PurchaseOrder implements org.apache.thrift.TBase<PurchaseOrder, PurchaseOrder._Fields>, java.io.Serializable, Cloneable, Comparable<PurchaseOrder> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("PurchaseOrder");

  private static final org.apache.thrift.protocol.TField _ID_FIELD_DESC = new org.apache.thrift.protocol.TField("_id", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField PO_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("poDate", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField PO_REQUESTIONED_BY_FIELD_DESC = new org.apache.thrift.protocol.TField("poRequestionedBy", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField CREATED_ON_FIELD_DESC = new org.apache.thrift.protocol.TField("createdOn", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField UPDATED_ON_FIELD_DESC = new org.apache.thrift.protocol.TField("updatedOn", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField UPDATED_BY_FIELD_DESC = new org.apache.thrift.protocol.TField("updatedBy", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField SELLER_DLTID_FIELD_DESC = new org.apache.thrift.protocol.TField("sellerDLTId", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField SELLER_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("sellerNumber", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField SELLER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("sellerName", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField SELLER_ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("sellerAddress", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField SELLER_TAX_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("sellerTaxId", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField BUYER_DLTID_FIELD_DESC = new org.apache.thrift.protocol.TField("buyerDLTId", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField BUYER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("buyerName", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField BUYER_TAX_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("buyerTaxId", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField BILLING_ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("billingAddress", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField SHIP_TO_ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("shipToAddress", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField PO_AMOUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("poAmount", org.apache.thrift.protocol.TType.DOUBLE, (short)18);
  private static final org.apache.thrift.protocol.TField DOCUMENT_METADATA_FIELD_DESC = new org.apache.thrift.protocol.TField("documentMetadata", org.apache.thrift.protocol.TType.STRUCT, (short)19);
  private static final org.apache.thrift.protocol.TField PO_EXP_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("poExpDate", org.apache.thrift.protocol.TType.I64, (short)20);
  private static final org.apache.thrift.protocol.TField PO_LINE_ITEMS_FIELD_DESC = new org.apache.thrift.protocol.TField("poLineItems", org.apache.thrift.protocol.TType.LIST, (short)21);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new PurchaseOrderStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new PurchaseOrderTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable String _id; // required
  public long poDate; // required
  public @org.apache.thrift.annotation.Nullable String poRequestionedBy; // required
  public long createdOn; // required
  public long updatedOn; // required
  public @org.apache.thrift.annotation.Nullable String updatedBy; // required
  public @org.apache.thrift.annotation.Nullable String status; // required
  public @org.apache.thrift.annotation.Nullable String sellerDLTId; // required
  public @org.apache.thrift.annotation.Nullable String sellerNumber; // required
  public @org.apache.thrift.annotation.Nullable String sellerName; // required
  public @org.apache.thrift.annotation.Nullable String sellerAddress; // required
  public @org.apache.thrift.annotation.Nullable String sellerTaxId; // required
  public @org.apache.thrift.annotation.Nullable String buyerDLTId; // required
  public @org.apache.thrift.annotation.Nullable String buyerName; // required
  public @org.apache.thrift.annotation.Nullable String buyerTaxId; // required
  public @org.apache.thrift.annotation.Nullable String billingAddress; // required
  public @org.apache.thrift.annotation.Nullable String shipToAddress; // required
  public double poAmount; // required
  public @org.apache.thrift.annotation.Nullable DocumentReference documentMetadata; // required
  public long poExpDate; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<LineItem> poLineItems; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    _ID((short)1, "_id"),
    PO_DATE((short)2, "poDate"),
    PO_REQUESTIONED_BY((short)3, "poRequestionedBy"),
    CREATED_ON((short)4, "createdOn"),
    UPDATED_ON((short)5, "updatedOn"),
    UPDATED_BY((short)6, "updatedBy"),
    STATUS((short)7, "status"),
    SELLER_DLTID((short)8, "sellerDLTId"),
    SELLER_NUMBER((short)9, "sellerNumber"),
    SELLER_NAME((short)10, "sellerName"),
    SELLER_ADDRESS((short)11, "sellerAddress"),
    SELLER_TAX_ID((short)12, "sellerTaxId"),
    BUYER_DLTID((short)13, "buyerDLTId"),
    BUYER_NAME((short)14, "buyerName"),
    BUYER_TAX_ID((short)15, "buyerTaxId"),
    BILLING_ADDRESS((short)16, "billingAddress"),
    SHIP_TO_ADDRESS((short)17, "shipToAddress"),
    PO_AMOUNT((short)18, "poAmount"),
    DOCUMENT_METADATA((short)19, "documentMetadata"),
    PO_EXP_DATE((short)20, "poExpDate"),
    PO_LINE_ITEMS((short)21, "poLineItems");

    private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // _ID
          return _ID;
        case 2: // PO_DATE
          return PO_DATE;
        case 3: // PO_REQUESTIONED_BY
          return PO_REQUESTIONED_BY;
        case 4: // CREATED_ON
          return CREATED_ON;
        case 5: // UPDATED_ON
          return UPDATED_ON;
        case 6: // UPDATED_BY
          return UPDATED_BY;
        case 7: // STATUS
          return STATUS;
        case 8: // SELLER_DLTID
          return SELLER_DLTID;
        case 9: // SELLER_NUMBER
          return SELLER_NUMBER;
        case 10: // SELLER_NAME
          return SELLER_NAME;
        case 11: // SELLER_ADDRESS
          return SELLER_ADDRESS;
        case 12: // SELLER_TAX_ID
          return SELLER_TAX_ID;
        case 13: // BUYER_DLTID
          return BUYER_DLTID;
        case 14: // BUYER_NAME
          return BUYER_NAME;
        case 15: // BUYER_TAX_ID
          return BUYER_TAX_ID;
        case 16: // BILLING_ADDRESS
          return BILLING_ADDRESS;
        case 17: // SHIP_TO_ADDRESS
          return SHIP_TO_ADDRESS;
        case 18: // PO_AMOUNT
          return PO_AMOUNT;
        case 19: // DOCUMENT_METADATA
          return DOCUMENT_METADATA;
        case 20: // PO_EXP_DATE
          return PO_EXP_DATE;
        case 21: // PO_LINE_ITEMS
          return PO_LINE_ITEMS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PODATE_ISSET_ID = 0;
  private static final int __CREATEDON_ISSET_ID = 1;
  private static final int __UPDATEDON_ISSET_ID = 2;
  private static final int __POAMOUNT_ISSET_ID = 3;
  private static final int __POEXPDATE_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields._ID, new org.apache.thrift.meta_data.FieldMetaData("_id", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PO_DATE, new org.apache.thrift.meta_data.FieldMetaData("poDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PO_REQUESTIONED_BY, new org.apache.thrift.meta_data.FieldMetaData("poRequestionedBy", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATED_ON, new org.apache.thrift.meta_data.FieldMetaData("createdOn", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.UPDATED_ON, new org.apache.thrift.meta_data.FieldMetaData("updatedOn", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.UPDATED_BY, new org.apache.thrift.meta_data.FieldMetaData("updatedBy", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SELLER_DLTID, new org.apache.thrift.meta_data.FieldMetaData("sellerDLTId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SELLER_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("sellerNumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SELLER_NAME, new org.apache.thrift.meta_data.FieldMetaData("sellerName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SELLER_ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("sellerAddress", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SELLER_TAX_ID, new org.apache.thrift.meta_data.FieldMetaData("sellerTaxId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BUYER_DLTID, new org.apache.thrift.meta_data.FieldMetaData("buyerDLTId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BUYER_NAME, new org.apache.thrift.meta_data.FieldMetaData("buyerName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BUYER_TAX_ID, new org.apache.thrift.meta_data.FieldMetaData("buyerTaxId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BILLING_ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("billingAddress", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SHIP_TO_ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("shipToAddress", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PO_AMOUNT, new org.apache.thrift.meta_data.FieldMetaData("poAmount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.DOCUMENT_METADATA, new org.apache.thrift.meta_data.FieldMetaData("documentMetadata", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, DocumentReference.class)));
    tmpMap.put(_Fields.PO_EXP_DATE, new org.apache.thrift.meta_data.FieldMetaData("poExpDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PO_LINE_ITEMS, new org.apache.thrift.meta_data.FieldMetaData("poLineItems", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, LineItem.class))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(PurchaseOrder.class, metaDataMap);
  }

  public PurchaseOrder() {
  }

  public PurchaseOrder(
    String _id,
    long poDate,
    String poRequestionedBy,
    long createdOn,
    long updatedOn,
    String updatedBy,
    String status,
    String sellerDLTId,
    String sellerNumber,
    String sellerName,
    String sellerAddress,
    String sellerTaxId,
    String buyerDLTId,
    String buyerName,
    String buyerTaxId,
    String billingAddress,
    String shipToAddress,
    double poAmount,
    DocumentReference documentMetadata,
    long poExpDate,
    java.util.List<LineItem> poLineItems)
  {
    this();
    this._id = _id;
    this.poDate = poDate;
    setPoDateIsSet(true);
    this.poRequestionedBy = poRequestionedBy;
    this.createdOn = createdOn;
    setCreatedOnIsSet(true);
    this.updatedOn = updatedOn;
    setUpdatedOnIsSet(true);
    this.updatedBy = updatedBy;
    this.status = status;
    this.sellerDLTId = sellerDLTId;
    this.sellerNumber = sellerNumber;
    this.sellerName = sellerName;
    this.sellerAddress = sellerAddress;
    this.sellerTaxId = sellerTaxId;
    this.buyerDLTId = buyerDLTId;
    this.buyerName = buyerName;
    this.buyerTaxId = buyerTaxId;
    this.billingAddress = billingAddress;
    this.shipToAddress = shipToAddress;
    this.poAmount = poAmount;
    setPoAmountIsSet(true);
    this.documentMetadata = documentMetadata;
    this.poExpDate = poExpDate;
    setPoExpDateIsSet(true);
    this.poLineItems = poLineItems;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public PurchaseOrder(PurchaseOrder other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSet_id()) {
      this._id = other._id;
    }
    this.poDate = other.poDate;
    if (other.isSetPoRequestionedBy()) {
      this.poRequestionedBy = other.poRequestionedBy;
    }
    this.createdOn = other.createdOn;
    this.updatedOn = other.updatedOn;
    if (other.isSetUpdatedBy()) {
      this.updatedBy = other.updatedBy;
    }
    if (other.isSetStatus()) {
      this.status = other.status;
    }
    if (other.isSetSellerDLTId()) {
      this.sellerDLTId = other.sellerDLTId;
    }
    if (other.isSetSellerNumber()) {
      this.sellerNumber = other.sellerNumber;
    }
    if (other.isSetSellerName()) {
      this.sellerName = other.sellerName;
    }
    if (other.isSetSellerAddress()) {
      this.sellerAddress = other.sellerAddress;
    }
    if (other.isSetSellerTaxId()) {
      this.sellerTaxId = other.sellerTaxId;
    }
    if (other.isSetBuyerDLTId()) {
      this.buyerDLTId = other.buyerDLTId;
    }
    if (other.isSetBuyerName()) {
      this.buyerName = other.buyerName;
    }
    if (other.isSetBuyerTaxId()) {
      this.buyerTaxId = other.buyerTaxId;
    }
    if (other.isSetBillingAddress()) {
      this.billingAddress = other.billingAddress;
    }
    if (other.isSetShipToAddress()) {
      this.shipToAddress = other.shipToAddress;
    }
    this.poAmount = other.poAmount;
    if (other.isSetDocumentMetadata()) {
      this.documentMetadata = new DocumentReference(other.documentMetadata);
    }
    this.poExpDate = other.poExpDate;
    if (other.isSetPoLineItems()) {
      java.util.List<LineItem> __this__poLineItems = new java.util.ArrayList<LineItem>(other.poLineItems.size());
      for (LineItem other_element : other.poLineItems) {
        __this__poLineItems.add(new LineItem(other_element));
      }
      this.poLineItems = __this__poLineItems;
    }
  }

  public PurchaseOrder deepCopy() {
    return new PurchaseOrder(this);
  }

  @Override
  public void clear() {
    this._id = null;
    setPoDateIsSet(false);
    this.poDate = 0;
    this.poRequestionedBy = null;
    setCreatedOnIsSet(false);
    this.createdOn = 0;
    setUpdatedOnIsSet(false);
    this.updatedOn = 0;
    this.updatedBy = null;
    this.status = null;
    this.sellerDLTId = null;
    this.sellerNumber = null;
    this.sellerName = null;
    this.sellerAddress = null;
    this.sellerTaxId = null;
    this.buyerDLTId = null;
    this.buyerName = null;
    this.buyerTaxId = null;
    this.billingAddress = null;
    this.shipToAddress = null;
    setPoAmountIsSet(false);
    this.poAmount = 0.0;
    this.documentMetadata = null;
    setPoExpDateIsSet(false);
    this.poExpDate = 0;
    this.poLineItems = null;
  }

  @org.apache.thrift.annotation.Nullable
  public String get_id() {
    return this._id;
  }

  public PurchaseOrder set_id(@org.apache.thrift.annotation.Nullable String _id) {
    this._id = _id;
    return this;
  }

  public void unset_id() {
    this._id = null;
  }

  /** Returns true if field _id is set (has been assigned a value) and false otherwise */
  public boolean isSet_id() {
    return this._id != null;
  }

  public void set_idIsSet(boolean value) {
    if (!value) {
      this._id = null;
    }
  }

  public long getPoDate() {
    return this.poDate;
  }

  public PurchaseOrder setPoDate(long poDate) {
    this.poDate = poDate;
    setPoDateIsSet(true);
    return this;
  }

  public void unsetPoDate() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PODATE_ISSET_ID);
  }

  /** Returns true if field poDate is set (has been assigned a value) and false otherwise */
  public boolean isSetPoDate() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PODATE_ISSET_ID);
  }

  public void setPoDateIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PODATE_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public String getPoRequestionedBy() {
    return this.poRequestionedBy;
  }

  public PurchaseOrder setPoRequestionedBy(@org.apache.thrift.annotation.Nullable String poRequestionedBy) {
    this.poRequestionedBy = poRequestionedBy;
    return this;
  }

  public void unsetPoRequestionedBy() {
    this.poRequestionedBy = null;
  }

  /** Returns true if field poRequestionedBy is set (has been assigned a value) and false otherwise */
  public boolean isSetPoRequestionedBy() {
    return this.poRequestionedBy != null;
  }

  public void setPoRequestionedByIsSet(boolean value) {
    if (!value) {
      this.poRequestionedBy = null;
    }
  }

  public long getCreatedOn() {
    return this.createdOn;
  }

  public PurchaseOrder setCreatedOn(long createdOn) {
    this.createdOn = createdOn;
    setCreatedOnIsSet(true);
    return this;
  }

  public void unsetCreatedOn() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CREATEDON_ISSET_ID);
  }

  /** Returns true if field createdOn is set (has been assigned a value) and false otherwise */
  public boolean isSetCreatedOn() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CREATEDON_ISSET_ID);
  }

  public void setCreatedOnIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CREATEDON_ISSET_ID, value);
  }

  public long getUpdatedOn() {
    return this.updatedOn;
  }

  public PurchaseOrder setUpdatedOn(long updatedOn) {
    this.updatedOn = updatedOn;
    setUpdatedOnIsSet(true);
    return this;
  }

  public void unsetUpdatedOn() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __UPDATEDON_ISSET_ID);
  }

  /** Returns true if field updatedOn is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdatedOn() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __UPDATEDON_ISSET_ID);
  }

  public void setUpdatedOnIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __UPDATEDON_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public String getUpdatedBy() {
    return this.updatedBy;
  }

  public PurchaseOrder setUpdatedBy(@org.apache.thrift.annotation.Nullable String updatedBy) {
    this.updatedBy = updatedBy;
    return this;
  }

  public void unsetUpdatedBy() {
    this.updatedBy = null;
  }

  /** Returns true if field updatedBy is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdatedBy() {
    return this.updatedBy != null;
  }

  public void setUpdatedByIsSet(boolean value) {
    if (!value) {
      this.updatedBy = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public String getStatus() {
    return this.status;
  }

  public PurchaseOrder setStatus(@org.apache.thrift.annotation.Nullable String status) {
    this.status = status;
    return this;
  }

  public void unsetStatus() {
    this.status = null;
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return this.status != null;
  }

  public void setStatusIsSet(boolean value) {
    if (!value) {
      this.status = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public String getSellerDLTId() {
    return this.sellerDLTId;
  }

  public PurchaseOrder setSellerDLTId(@org.apache.thrift.annotation.Nullable String sellerDLTId) {
    this.sellerDLTId = sellerDLTId;
    return this;
  }

  public void unsetSellerDLTId() {
    this.sellerDLTId = null;
  }

  /** Returns true if field sellerDLTId is set (has been assigned a value) and false otherwise */
  public boolean isSetSellerDLTId() {
    return this.sellerDLTId != null;
  }

  public void setSellerDLTIdIsSet(boolean value) {
    if (!value) {
      this.sellerDLTId = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public String getSellerNumber() {
    return this.sellerNumber;
  }

  public PurchaseOrder setSellerNumber(@org.apache.thrift.annotation.Nullable String sellerNumber) {
    this.sellerNumber = sellerNumber;
    return this;
  }

  public void unsetSellerNumber() {
    this.sellerNumber = null;
  }

  /** Returns true if field sellerNumber is set (has been assigned a value) and false otherwise */
  public boolean isSetSellerNumber() {
    return this.sellerNumber != null;
  }

  public void setSellerNumberIsSet(boolean value) {
    if (!value) {
      this.sellerNumber = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public String getSellerName() {
    return this.sellerName;
  }

  public PurchaseOrder setSellerName(@org.apache.thrift.annotation.Nullable String sellerName) {
    this.sellerName = sellerName;
    return this;
  }

  public void unsetSellerName() {
    this.sellerName = null;
  }

  /** Returns true if field sellerName is set (has been assigned a value) and false otherwise */
  public boolean isSetSellerName() {
    return this.sellerName != null;
  }

  public void setSellerNameIsSet(boolean value) {
    if (!value) {
      this.sellerName = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public String getSellerAddress() {
    return this.sellerAddress;
  }

  public PurchaseOrder setSellerAddress(@org.apache.thrift.annotation.Nullable String sellerAddress) {
    this.sellerAddress = sellerAddress;
    return this;
  }

  public void unsetSellerAddress() {
    this.sellerAddress = null;
  }

  /** Returns true if field sellerAddress is set (has been assigned a value) and false otherwise */
  public boolean isSetSellerAddress() {
    return this.sellerAddress != null;
  }

  public void setSellerAddressIsSet(boolean value) {
    if (!value) {
      this.sellerAddress = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public String getSellerTaxId() {
    return this.sellerTaxId;
  }

  public PurchaseOrder setSellerTaxId(@org.apache.thrift.annotation.Nullable String sellerTaxId) {
    this.sellerTaxId = sellerTaxId;
    return this;
  }

  public void unsetSellerTaxId() {
    this.sellerTaxId = null;
  }

  /** Returns true if field sellerTaxId is set (has been assigned a value) and false otherwise */
  public boolean isSetSellerTaxId() {
    return this.sellerTaxId != null;
  }

  public void setSellerTaxIdIsSet(boolean value) {
    if (!value) {
      this.sellerTaxId = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public String getBuyerDLTId() {
    return this.buyerDLTId;
  }

  public PurchaseOrder setBuyerDLTId(@org.apache.thrift.annotation.Nullable String buyerDLTId) {
    this.buyerDLTId = buyerDLTId;
    return this;
  }

  public void unsetBuyerDLTId() {
    this.buyerDLTId = null;
  }

  /** Returns true if field buyerDLTId is set (has been assigned a value) and false otherwise */
  public boolean isSetBuyerDLTId() {
    return this.buyerDLTId != null;
  }

  public void setBuyerDLTIdIsSet(boolean value) {
    if (!value) {
      this.buyerDLTId = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public String getBuyerName() {
    return this.buyerName;
  }

  public PurchaseOrder setBuyerName(@org.apache.thrift.annotation.Nullable String buyerName) {
    this.buyerName = buyerName;
    return this;
  }

  public void unsetBuyerName() {
    this.buyerName = null;
  }

  /** Returns true if field buyerName is set (has been assigned a value) and false otherwise */
  public boolean isSetBuyerName() {
    return this.buyerName != null;
  }

  public void setBuyerNameIsSet(boolean value) {
    if (!value) {
      this.buyerName = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public String getBuyerTaxId() {
    return this.buyerTaxId;
  }

  public PurchaseOrder setBuyerTaxId(@org.apache.thrift.annotation.Nullable String buyerTaxId) {
    this.buyerTaxId = buyerTaxId;
    return this;
  }

  public void unsetBuyerTaxId() {
    this.buyerTaxId = null;
  }

  /** Returns true if field buyerTaxId is set (has been assigned a value) and false otherwise */
  public boolean isSetBuyerTaxId() {
    return this.buyerTaxId != null;
  }

  public void setBuyerTaxIdIsSet(boolean value) {
    if (!value) {
      this.buyerTaxId = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public String getBillingAddress() {
    return this.billingAddress;
  }

  public PurchaseOrder setBillingAddress(@org.apache.thrift.annotation.Nullable String billingAddress) {
    this.billingAddress = billingAddress;
    return this;
  }

  public void unsetBillingAddress() {
    this.billingAddress = null;
  }

  /** Returns true if field billingAddress is set (has been assigned a value) and false otherwise */
  public boolean isSetBillingAddress() {
    return this.billingAddress != null;
  }

  public void setBillingAddressIsSet(boolean value) {
    if (!value) {
      this.billingAddress = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public String getShipToAddress() {
    return this.shipToAddress;
  }

  public PurchaseOrder setShipToAddress(@org.apache.thrift.annotation.Nullable String shipToAddress) {
    this.shipToAddress = shipToAddress;
    return this;
  }

  public void unsetShipToAddress() {
    this.shipToAddress = null;
  }

  /** Returns true if field shipToAddress is set (has been assigned a value) and false otherwise */
  public boolean isSetShipToAddress() {
    return this.shipToAddress != null;
  }

  public void setShipToAddressIsSet(boolean value) {
    if (!value) {
      this.shipToAddress = null;
    }
  }

  public double getPoAmount() {
    return this.poAmount;
  }

  public PurchaseOrder setPoAmount(double poAmount) {
    this.poAmount = poAmount;
    setPoAmountIsSet(true);
    return this;
  }

  public void unsetPoAmount() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __POAMOUNT_ISSET_ID);
  }

  /** Returns true if field poAmount is set (has been assigned a value) and false otherwise */
  public boolean isSetPoAmount() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __POAMOUNT_ISSET_ID);
  }

  public void setPoAmountIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __POAMOUNT_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public DocumentReference getDocumentMetadata() {
    return this.documentMetadata;
  }

  public PurchaseOrder setDocumentMetadata(@org.apache.thrift.annotation.Nullable DocumentReference documentMetadata) {
    this.documentMetadata = documentMetadata;
    return this;
  }

  public void unsetDocumentMetadata() {
    this.documentMetadata = null;
  }

  /** Returns true if field documentMetadata is set (has been assigned a value) and false otherwise */
  public boolean isSetDocumentMetadata() {
    return this.documentMetadata != null;
  }

  public void setDocumentMetadataIsSet(boolean value) {
    if (!value) {
      this.documentMetadata = null;
    }
  }

  public long getPoExpDate() {
    return this.poExpDate;
  }

  public PurchaseOrder setPoExpDate(long poExpDate) {
    this.poExpDate = poExpDate;
    setPoExpDateIsSet(true);
    return this;
  }

  public void unsetPoExpDate() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __POEXPDATE_ISSET_ID);
  }

  /** Returns true if field poExpDate is set (has been assigned a value) and false otherwise */
  public boolean isSetPoExpDate() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __POEXPDATE_ISSET_ID);
  }

  public void setPoExpDateIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __POEXPDATE_ISSET_ID, value);
  }

  public int getPoLineItemsSize() {
    return (this.poLineItems == null) ? 0 : this.poLineItems.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<LineItem> getPoLineItemsIterator() {
    return (this.poLineItems == null) ? null : this.poLineItems.iterator();
  }

  public void addToPoLineItems(LineItem elem) {
    if (this.poLineItems == null) {
      this.poLineItems = new java.util.ArrayList<LineItem>();
    }
    this.poLineItems.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<LineItem> getPoLineItems() {
    return this.poLineItems;
  }

  public PurchaseOrder setPoLineItems(@org.apache.thrift.annotation.Nullable java.util.List<LineItem> poLineItems) {
    this.poLineItems = poLineItems;
    return this;
  }

  public void unsetPoLineItems() {
    this.poLineItems = null;
  }

  /** Returns true if field poLineItems is set (has been assigned a value) and false otherwise */
  public boolean isSetPoLineItems() {
    return this.poLineItems != null;
  }

  public void setPoLineItemsIsSet(boolean value) {
    if (!value) {
      this.poLineItems = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable Object value) {
    switch (field) {
    case _ID:
      if (value == null) {
        unset_id();
      } else {
        set_id((String)value);
      }
      break;

    case PO_DATE:
      if (value == null) {
        unsetPoDate();
      } else {
        setPoDate((Long)value);
      }
      break;

    case PO_REQUESTIONED_BY:
      if (value == null) {
        unsetPoRequestionedBy();
      } else {
        setPoRequestionedBy((String)value);
      }
      break;

    case CREATED_ON:
      if (value == null) {
        unsetCreatedOn();
      } else {
        setCreatedOn((Long)value);
      }
      break;

    case UPDATED_ON:
      if (value == null) {
        unsetUpdatedOn();
      } else {
        setUpdatedOn((Long)value);
      }
      break;

    case UPDATED_BY:
      if (value == null) {
        unsetUpdatedBy();
      } else {
        setUpdatedBy((String)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((String)value);
      }
      break;

    case SELLER_DLTID:
      if (value == null) {
        unsetSellerDLTId();
      } else {
        setSellerDLTId((String)value);
      }
      break;

    case SELLER_NUMBER:
      if (value == null) {
        unsetSellerNumber();
      } else {
        setSellerNumber((String)value);
      }
      break;

    case SELLER_NAME:
      if (value == null) {
        unsetSellerName();
      } else {
        setSellerName((String)value);
      }
      break;

    case SELLER_ADDRESS:
      if (value == null) {
        unsetSellerAddress();
      } else {
        setSellerAddress((String)value);
      }
      break;

    case SELLER_TAX_ID:
      if (value == null) {
        unsetSellerTaxId();
      } else {
        setSellerTaxId((String)value);
      }
      break;

    case BUYER_DLTID:
      if (value == null) {
        unsetBuyerDLTId();
      } else {
        setBuyerDLTId((String)value);
      }
      break;

    case BUYER_NAME:
      if (value == null) {
        unsetBuyerName();
      } else {
        setBuyerName((String)value);
      }
      break;

    case BUYER_TAX_ID:
      if (value == null) {
        unsetBuyerTaxId();
      } else {
        setBuyerTaxId((String)value);
      }
      break;

    case BILLING_ADDRESS:
      if (value == null) {
        unsetBillingAddress();
      } else {
        setBillingAddress((String)value);
      }
      break;

    case SHIP_TO_ADDRESS:
      if (value == null) {
        unsetShipToAddress();
      } else {
        setShipToAddress((String)value);
      }
      break;

    case PO_AMOUNT:
      if (value == null) {
        unsetPoAmount();
      } else {
        setPoAmount((Double)value);
      }
      break;

    case DOCUMENT_METADATA:
      if (value == null) {
        unsetDocumentMetadata();
      } else {
        setDocumentMetadata((DocumentReference)value);
      }
      break;

    case PO_EXP_DATE:
      if (value == null) {
        unsetPoExpDate();
      } else {
        setPoExpDate((Long)value);
      }
      break;

    case PO_LINE_ITEMS:
      if (value == null) {
        unsetPoLineItems();
      } else {
        setPoLineItems((java.util.List<LineItem>)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public Object getFieldValue(_Fields field) {
    switch (field) {
    case _ID:
      return get_id();

    case PO_DATE:
      return getPoDate();

    case PO_REQUESTIONED_BY:
      return getPoRequestionedBy();

    case CREATED_ON:
      return getCreatedOn();

    case UPDATED_ON:
      return getUpdatedOn();

    case UPDATED_BY:
      return getUpdatedBy();

    case STATUS:
      return getStatus();

    case SELLER_DLTID:
      return getSellerDLTId();

    case SELLER_NUMBER:
      return getSellerNumber();

    case SELLER_NAME:
      return getSellerName();

    case SELLER_ADDRESS:
      return getSellerAddress();

    case SELLER_TAX_ID:
      return getSellerTaxId();

    case BUYER_DLTID:
      return getBuyerDLTId();

    case BUYER_NAME:
      return getBuyerName();

    case BUYER_TAX_ID:
      return getBuyerTaxId();

    case BILLING_ADDRESS:
      return getBillingAddress();

    case SHIP_TO_ADDRESS:
      return getShipToAddress();

    case PO_AMOUNT:
      return getPoAmount();

    case DOCUMENT_METADATA:
      return getDocumentMetadata();

    case PO_EXP_DATE:
      return getPoExpDate();

    case PO_LINE_ITEMS:
      return getPoLineItems();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case _ID:
      return isSet_id();
    case PO_DATE:
      return isSetPoDate();
    case PO_REQUESTIONED_BY:
      return isSetPoRequestionedBy();
    case CREATED_ON:
      return isSetCreatedOn();
    case UPDATED_ON:
      return isSetUpdatedOn();
    case UPDATED_BY:
      return isSetUpdatedBy();
    case STATUS:
      return isSetStatus();
    case SELLER_DLTID:
      return isSetSellerDLTId();
    case SELLER_NUMBER:
      return isSetSellerNumber();
    case SELLER_NAME:
      return isSetSellerName();
    case SELLER_ADDRESS:
      return isSetSellerAddress();
    case SELLER_TAX_ID:
      return isSetSellerTaxId();
    case BUYER_DLTID:
      return isSetBuyerDLTId();
    case BUYER_NAME:
      return isSetBuyerName();
    case BUYER_TAX_ID:
      return isSetBuyerTaxId();
    case BILLING_ADDRESS:
      return isSetBillingAddress();
    case SHIP_TO_ADDRESS:
      return isSetShipToAddress();
    case PO_AMOUNT:
      return isSetPoAmount();
    case DOCUMENT_METADATA:
      return isSetDocumentMetadata();
    case PO_EXP_DATE:
      return isSetPoExpDate();
    case PO_LINE_ITEMS:
      return isSetPoLineItems();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof PurchaseOrder)
      return this.equals((PurchaseOrder)that);
    return false;
  }

  public boolean equals(PurchaseOrder that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present__id = true && this.isSet_id();
    boolean that_present__id = true && that.isSet_id();
    if (this_present__id || that_present__id) {
      if (!(this_present__id && that_present__id))
        return false;
      if (!this._id.equals(that._id))
        return false;
    }

    boolean this_present_poDate = true;
    boolean that_present_poDate = true;
    if (this_present_poDate || that_present_poDate) {
      if (!(this_present_poDate && that_present_poDate))
        return false;
      if (this.poDate != that.poDate)
        return false;
    }

    boolean this_present_poRequestionedBy = true && this.isSetPoRequestionedBy();
    boolean that_present_poRequestionedBy = true && that.isSetPoRequestionedBy();
    if (this_present_poRequestionedBy || that_present_poRequestionedBy) {
      if (!(this_present_poRequestionedBy && that_present_poRequestionedBy))
        return false;
      if (!this.poRequestionedBy.equals(that.poRequestionedBy))
        return false;
    }

    boolean this_present_createdOn = true;
    boolean that_present_createdOn = true;
    if (this_present_createdOn || that_present_createdOn) {
      if (!(this_present_createdOn && that_present_createdOn))
        return false;
      if (this.createdOn != that.createdOn)
        return false;
    }

    boolean this_present_updatedOn = true;
    boolean that_present_updatedOn = true;
    if (this_present_updatedOn || that_present_updatedOn) {
      if (!(this_present_updatedOn && that_present_updatedOn))
        return false;
      if (this.updatedOn != that.updatedOn)
        return false;
    }

    boolean this_present_updatedBy = true && this.isSetUpdatedBy();
    boolean that_present_updatedBy = true && that.isSetUpdatedBy();
    if (this_present_updatedBy || that_present_updatedBy) {
      if (!(this_present_updatedBy && that_present_updatedBy))
        return false;
      if (!this.updatedBy.equals(that.updatedBy))
        return false;
    }

    boolean this_present_status = true && this.isSetStatus();
    boolean that_present_status = true && that.isSetStatus();
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (!this.status.equals(that.status))
        return false;
    }

    boolean this_present_sellerDLTId = true && this.isSetSellerDLTId();
    boolean that_present_sellerDLTId = true && that.isSetSellerDLTId();
    if (this_present_sellerDLTId || that_present_sellerDLTId) {
      if (!(this_present_sellerDLTId && that_present_sellerDLTId))
        return false;
      if (!this.sellerDLTId.equals(that.sellerDLTId))
        return false;
    }

    boolean this_present_sellerNumber = true && this.isSetSellerNumber();
    boolean that_present_sellerNumber = true && that.isSetSellerNumber();
    if (this_present_sellerNumber || that_present_sellerNumber) {
      if (!(this_present_sellerNumber && that_present_sellerNumber))
        return false;
      if (!this.sellerNumber.equals(that.sellerNumber))
        return false;
    }

    boolean this_present_sellerName = true && this.isSetSellerName();
    boolean that_present_sellerName = true && that.isSetSellerName();
    if (this_present_sellerName || that_present_sellerName) {
      if (!(this_present_sellerName && that_present_sellerName))
        return false;
      if (!this.sellerName.equals(that.sellerName))
        return false;
    }

    boolean this_present_sellerAddress = true && this.isSetSellerAddress();
    boolean that_present_sellerAddress = true && that.isSetSellerAddress();
    if (this_present_sellerAddress || that_present_sellerAddress) {
      if (!(this_present_sellerAddress && that_present_sellerAddress))
        return false;
      if (!this.sellerAddress.equals(that.sellerAddress))
        return false;
    }

    boolean this_present_sellerTaxId = true && this.isSetSellerTaxId();
    boolean that_present_sellerTaxId = true && that.isSetSellerTaxId();
    if (this_present_sellerTaxId || that_present_sellerTaxId) {
      if (!(this_present_sellerTaxId && that_present_sellerTaxId))
        return false;
      if (!this.sellerTaxId.equals(that.sellerTaxId))
        return false;
    }

    boolean this_present_buyerDLTId = true && this.isSetBuyerDLTId();
    boolean that_present_buyerDLTId = true && that.isSetBuyerDLTId();
    if (this_present_buyerDLTId || that_present_buyerDLTId) {
      if (!(this_present_buyerDLTId && that_present_buyerDLTId))
        return false;
      if (!this.buyerDLTId.equals(that.buyerDLTId))
        return false;
    }

    boolean this_present_buyerName = true && this.isSetBuyerName();
    boolean that_present_buyerName = true && that.isSetBuyerName();
    if (this_present_buyerName || that_present_buyerName) {
      if (!(this_present_buyerName && that_present_buyerName))
        return false;
      if (!this.buyerName.equals(that.buyerName))
        return false;
    }

    boolean this_present_buyerTaxId = true && this.isSetBuyerTaxId();
    boolean that_present_buyerTaxId = true && that.isSetBuyerTaxId();
    if (this_present_buyerTaxId || that_present_buyerTaxId) {
      if (!(this_present_buyerTaxId && that_present_buyerTaxId))
        return false;
      if (!this.buyerTaxId.equals(that.buyerTaxId))
        return false;
    }

    boolean this_present_billingAddress = true && this.isSetBillingAddress();
    boolean that_present_billingAddress = true && that.isSetBillingAddress();
    if (this_present_billingAddress || that_present_billingAddress) {
      if (!(this_present_billingAddress && that_present_billingAddress))
        return false;
      if (!this.billingAddress.equals(that.billingAddress))
        return false;
    }

    boolean this_present_shipToAddress = true && this.isSetShipToAddress();
    boolean that_present_shipToAddress = true && that.isSetShipToAddress();
    if (this_present_shipToAddress || that_present_shipToAddress) {
      if (!(this_present_shipToAddress && that_present_shipToAddress))
        return false;
      if (!this.shipToAddress.equals(that.shipToAddress))
        return false;
    }

    boolean this_present_poAmount = true;
    boolean that_present_poAmount = true;
    if (this_present_poAmount || that_present_poAmount) {
      if (!(this_present_poAmount && that_present_poAmount))
        return false;
      if (this.poAmount != that.poAmount)
        return false;
    }

    boolean this_present_documentMetadata = true && this.isSetDocumentMetadata();
    boolean that_present_documentMetadata = true && that.isSetDocumentMetadata();
    if (this_present_documentMetadata || that_present_documentMetadata) {
      if (!(this_present_documentMetadata && that_present_documentMetadata))
        return false;
      if (!this.documentMetadata.equals(that.documentMetadata))
        return false;
    }

    boolean this_present_poExpDate = true;
    boolean that_present_poExpDate = true;
    if (this_present_poExpDate || that_present_poExpDate) {
      if (!(this_present_poExpDate && that_present_poExpDate))
        return false;
      if (this.poExpDate != that.poExpDate)
        return false;
    }

    boolean this_present_poLineItems = true && this.isSetPoLineItems();
    boolean that_present_poLineItems = true && that.isSetPoLineItems();
    if (this_present_poLineItems || that_present_poLineItems) {
      if (!(this_present_poLineItems && that_present_poLineItems))
        return false;
      if (!this.poLineItems.equals(that.poLineItems))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSet_id()) ? 131071 : 524287);
    if (isSet_id())
      hashCode = hashCode * 8191 + _id.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(poDate);

    hashCode = hashCode * 8191 + ((isSetPoRequestionedBy()) ? 131071 : 524287);
    if (isSetPoRequestionedBy())
      hashCode = hashCode * 8191 + poRequestionedBy.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(createdOn);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(updatedOn);

    hashCode = hashCode * 8191 + ((isSetUpdatedBy()) ? 131071 : 524287);
    if (isSetUpdatedBy())
      hashCode = hashCode * 8191 + updatedBy.hashCode();

    hashCode = hashCode * 8191 + ((isSetStatus()) ? 131071 : 524287);
    if (isSetStatus())
      hashCode = hashCode * 8191 + status.hashCode();

    hashCode = hashCode * 8191 + ((isSetSellerDLTId()) ? 131071 : 524287);
    if (isSetSellerDLTId())
      hashCode = hashCode * 8191 + sellerDLTId.hashCode();

    hashCode = hashCode * 8191 + ((isSetSellerNumber()) ? 131071 : 524287);
    if (isSetSellerNumber())
      hashCode = hashCode * 8191 + sellerNumber.hashCode();

    hashCode = hashCode * 8191 + ((isSetSellerName()) ? 131071 : 524287);
    if (isSetSellerName())
      hashCode = hashCode * 8191 + sellerName.hashCode();

    hashCode = hashCode * 8191 + ((isSetSellerAddress()) ? 131071 : 524287);
    if (isSetSellerAddress())
      hashCode = hashCode * 8191 + sellerAddress.hashCode();

    hashCode = hashCode * 8191 + ((isSetSellerTaxId()) ? 131071 : 524287);
    if (isSetSellerTaxId())
      hashCode = hashCode * 8191 + sellerTaxId.hashCode();

    hashCode = hashCode * 8191 + ((isSetBuyerDLTId()) ? 131071 : 524287);
    if (isSetBuyerDLTId())
      hashCode = hashCode * 8191 + buyerDLTId.hashCode();

    hashCode = hashCode * 8191 + ((isSetBuyerName()) ? 131071 : 524287);
    if (isSetBuyerName())
      hashCode = hashCode * 8191 + buyerName.hashCode();

    hashCode = hashCode * 8191 + ((isSetBuyerTaxId()) ? 131071 : 524287);
    if (isSetBuyerTaxId())
      hashCode = hashCode * 8191 + buyerTaxId.hashCode();

    hashCode = hashCode * 8191 + ((isSetBillingAddress()) ? 131071 : 524287);
    if (isSetBillingAddress())
      hashCode = hashCode * 8191 + billingAddress.hashCode();

    hashCode = hashCode * 8191 + ((isSetShipToAddress()) ? 131071 : 524287);
    if (isSetShipToAddress())
      hashCode = hashCode * 8191 + shipToAddress.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(poAmount);

    hashCode = hashCode * 8191 + ((isSetDocumentMetadata()) ? 131071 : 524287);
    if (isSetDocumentMetadata())
      hashCode = hashCode * 8191 + documentMetadata.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(poExpDate);

    hashCode = hashCode * 8191 + ((isSetPoLineItems()) ? 131071 : 524287);
    if (isSetPoLineItems())
      hashCode = hashCode * 8191 + poLineItems.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(PurchaseOrder other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSet_id()).compareTo(other.isSet_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._id, other._id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPoDate()).compareTo(other.isSetPoDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPoDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.poDate, other.poDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPoRequestionedBy()).compareTo(other.isSetPoRequestionedBy());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPoRequestionedBy()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.poRequestionedBy, other.poRequestionedBy);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreatedOn()).compareTo(other.isSetCreatedOn());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreatedOn()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createdOn, other.createdOn);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdatedOn()).compareTo(other.isSetUpdatedOn());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdatedOn()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updatedOn, other.updatedOn);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdatedBy()).compareTo(other.isSetUpdatedBy());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdatedBy()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updatedBy, other.updatedBy);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSellerDLTId()).compareTo(other.isSetSellerDLTId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSellerDLTId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sellerDLTId, other.sellerDLTId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSellerNumber()).compareTo(other.isSetSellerNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSellerNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sellerNumber, other.sellerNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSellerName()).compareTo(other.isSetSellerName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSellerName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sellerName, other.sellerName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSellerAddress()).compareTo(other.isSetSellerAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSellerAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sellerAddress, other.sellerAddress);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSellerTaxId()).compareTo(other.isSetSellerTaxId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSellerTaxId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sellerTaxId, other.sellerTaxId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBuyerDLTId()).compareTo(other.isSetBuyerDLTId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBuyerDLTId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.buyerDLTId, other.buyerDLTId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBuyerName()).compareTo(other.isSetBuyerName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBuyerName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.buyerName, other.buyerName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBuyerTaxId()).compareTo(other.isSetBuyerTaxId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBuyerTaxId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.buyerTaxId, other.buyerTaxId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBillingAddress()).compareTo(other.isSetBillingAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBillingAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.billingAddress, other.billingAddress);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetShipToAddress()).compareTo(other.isSetShipToAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetShipToAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.shipToAddress, other.shipToAddress);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPoAmount()).compareTo(other.isSetPoAmount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPoAmount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.poAmount, other.poAmount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDocumentMetadata()).compareTo(other.isSetDocumentMetadata());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDocumentMetadata()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.documentMetadata, other.documentMetadata);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPoExpDate()).compareTo(other.isSetPoExpDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPoExpDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.poExpDate, other.poExpDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPoLineItems()).compareTo(other.isSetPoLineItems());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPoLineItems()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.poLineItems, other.poLineItems);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("PurchaseOrder(");
    boolean first = true;

    sb.append("_id:");
    if (this._id == null) {
      sb.append("null");
    } else {
      sb.append(this._id);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("poDate:");
    sb.append(this.poDate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("poRequestionedBy:");
    if (this.poRequestionedBy == null) {
      sb.append("null");
    } else {
      sb.append(this.poRequestionedBy);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createdOn:");
    sb.append(this.createdOn);
    first = false;
    if (!first) sb.append(", ");
    sb.append("updatedOn:");
    sb.append(this.updatedOn);
    first = false;
    if (!first) sb.append(", ");
    sb.append("updatedBy:");
    if (this.updatedBy == null) {
      sb.append("null");
    } else {
      sb.append(this.updatedBy);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    if (this.status == null) {
      sb.append("null");
    } else {
      sb.append(this.status);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sellerDLTId:");
    if (this.sellerDLTId == null) {
      sb.append("null");
    } else {
      sb.append(this.sellerDLTId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sellerNumber:");
    if (this.sellerNumber == null) {
      sb.append("null");
    } else {
      sb.append(this.sellerNumber);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sellerName:");
    if (this.sellerName == null) {
      sb.append("null");
    } else {
      sb.append(this.sellerName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sellerAddress:");
    if (this.sellerAddress == null) {
      sb.append("null");
    } else {
      sb.append(this.sellerAddress);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sellerTaxId:");
    if (this.sellerTaxId == null) {
      sb.append("null");
    } else {
      sb.append(this.sellerTaxId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("buyerDLTId:");
    if (this.buyerDLTId == null) {
      sb.append("null");
    } else {
      sb.append(this.buyerDLTId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("buyerName:");
    if (this.buyerName == null) {
      sb.append("null");
    } else {
      sb.append(this.buyerName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("buyerTaxId:");
    if (this.buyerTaxId == null) {
      sb.append("null");
    } else {
      sb.append(this.buyerTaxId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("billingAddress:");
    if (this.billingAddress == null) {
      sb.append("null");
    } else {
      sb.append(this.billingAddress);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("shipToAddress:");
    if (this.shipToAddress == null) {
      sb.append("null");
    } else {
      sb.append(this.shipToAddress);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("poAmount:");
    sb.append(this.poAmount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("documentMetadata:");
    if (this.documentMetadata == null) {
      sb.append("null");
    } else {
      sb.append(this.documentMetadata);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("poExpDate:");
    sb.append(this.poExpDate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("poLineItems:");
    if (this.poLineItems == null) {
      sb.append("null");
    } else {
      sb.append(this.poLineItems);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (_id == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_id' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
    if (documentMetadata != null) {
      documentMetadata.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class PurchaseOrderStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public PurchaseOrderStandardScheme getScheme() {
      return new PurchaseOrderStandardScheme();
    }
  }

  private static class PurchaseOrderStandardScheme extends org.apache.thrift.scheme.StandardScheme<PurchaseOrder> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, PurchaseOrder struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // _ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._id = iprot.readString();
              struct.set_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PO_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.poDate = iprot.readI64();
              struct.setPoDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PO_REQUESTIONED_BY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.poRequestionedBy = iprot.readString();
              struct.setPoRequestionedByIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CREATED_ON
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createdOn = iprot.readI64();
              struct.setCreatedOnIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // UPDATED_ON
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.updatedOn = iprot.readI64();
              struct.setUpdatedOnIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // UPDATED_BY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.updatedBy = iprot.readString();
              struct.setUpdatedByIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.status = iprot.readString();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // SELLER_DLTID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.sellerDLTId = iprot.readString();
              struct.setSellerDLTIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // SELLER_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.sellerNumber = iprot.readString();
              struct.setSellerNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // SELLER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.sellerName = iprot.readString();
              struct.setSellerNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // SELLER_ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.sellerAddress = iprot.readString();
              struct.setSellerAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // SELLER_TAX_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.sellerTaxId = iprot.readString();
              struct.setSellerTaxIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // BUYER_DLTID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.buyerDLTId = iprot.readString();
              struct.setBuyerDLTIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // BUYER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.buyerName = iprot.readString();
              struct.setBuyerNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // BUYER_TAX_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.buyerTaxId = iprot.readString();
              struct.setBuyerTaxIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // BILLING_ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.billingAddress = iprot.readString();
              struct.setBillingAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // SHIP_TO_ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.shipToAddress = iprot.readString();
              struct.setShipToAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // PO_AMOUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.poAmount = iprot.readDouble();
              struct.setPoAmountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // DOCUMENT_METADATA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.documentMetadata = new DocumentReference();
              struct.documentMetadata.read(iprot);
              struct.setDocumentMetadataIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // PO_EXP_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.poExpDate = iprot.readI64();
              struct.setPoExpDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // PO_LINE_ITEMS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.poLineItems = new java.util.ArrayList<LineItem>(_list0.size);
                @org.apache.thrift.annotation.Nullable LineItem _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = new LineItem();
                  _elem1.read(iprot);
                  struct.poLineItems.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setPoLineItemsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, PurchaseOrder struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct._id != null) {
        oprot.writeFieldBegin(_ID_FIELD_DESC);
        oprot.writeString(struct._id);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PO_DATE_FIELD_DESC);
      oprot.writeI64(struct.poDate);
      oprot.writeFieldEnd();
      if (struct.poRequestionedBy != null) {
        oprot.writeFieldBegin(PO_REQUESTIONED_BY_FIELD_DESC);
        oprot.writeString(struct.poRequestionedBy);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CREATED_ON_FIELD_DESC);
      oprot.writeI64(struct.createdOn);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(UPDATED_ON_FIELD_DESC);
      oprot.writeI64(struct.updatedOn);
      oprot.writeFieldEnd();
      if (struct.updatedBy != null) {
        oprot.writeFieldBegin(UPDATED_BY_FIELD_DESC);
        oprot.writeString(struct.updatedBy);
        oprot.writeFieldEnd();
      }
      if (struct.status != null) {
        oprot.writeFieldBegin(STATUS_FIELD_DESC);
        oprot.writeString(struct.status);
        oprot.writeFieldEnd();
      }
      if (struct.sellerDLTId != null) {
        oprot.writeFieldBegin(SELLER_DLTID_FIELD_DESC);
        oprot.writeString(struct.sellerDLTId);
        oprot.writeFieldEnd();
      }
      if (struct.sellerNumber != null) {
        oprot.writeFieldBegin(SELLER_NUMBER_FIELD_DESC);
        oprot.writeString(struct.sellerNumber);
        oprot.writeFieldEnd();
      }
      if (struct.sellerName != null) {
        oprot.writeFieldBegin(SELLER_NAME_FIELD_DESC);
        oprot.writeString(struct.sellerName);
        oprot.writeFieldEnd();
      }
      if (struct.sellerAddress != null) {
        oprot.writeFieldBegin(SELLER_ADDRESS_FIELD_DESC);
        oprot.writeString(struct.sellerAddress);
        oprot.writeFieldEnd();
      }
      if (struct.sellerTaxId != null) {
        oprot.writeFieldBegin(SELLER_TAX_ID_FIELD_DESC);
        oprot.writeString(struct.sellerTaxId);
        oprot.writeFieldEnd();
      }
      if (struct.buyerDLTId != null) {
        oprot.writeFieldBegin(BUYER_DLTID_FIELD_DESC);
        oprot.writeString(struct.buyerDLTId);
        oprot.writeFieldEnd();
      }
      if (struct.buyerName != null) {
        oprot.writeFieldBegin(BUYER_NAME_FIELD_DESC);
        oprot.writeString(struct.buyerName);
        oprot.writeFieldEnd();
      }
      if (struct.buyerTaxId != null) {
        oprot.writeFieldBegin(BUYER_TAX_ID_FIELD_DESC);
        oprot.writeString(struct.buyerTaxId);
        oprot.writeFieldEnd();
      }
      if (struct.billingAddress != null) {
        oprot.writeFieldBegin(BILLING_ADDRESS_FIELD_DESC);
        oprot.writeString(struct.billingAddress);
        oprot.writeFieldEnd();
      }
      if (struct.shipToAddress != null) {
        oprot.writeFieldBegin(SHIP_TO_ADDRESS_FIELD_DESC);
        oprot.writeString(struct.shipToAddress);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PO_AMOUNT_FIELD_DESC);
      oprot.writeDouble(struct.poAmount);
      oprot.writeFieldEnd();
      if (struct.documentMetadata != null) {
        oprot.writeFieldBegin(DOCUMENT_METADATA_FIELD_DESC);
        struct.documentMetadata.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PO_EXP_DATE_FIELD_DESC);
      oprot.writeI64(struct.poExpDate);
      oprot.writeFieldEnd();
      if (struct.poLineItems != null) {
        oprot.writeFieldBegin(PO_LINE_ITEMS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.poLineItems.size()));
          for (LineItem _iter3 : struct.poLineItems)
          {
            _iter3.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class PurchaseOrderTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public PurchaseOrderTupleScheme getScheme() {
      return new PurchaseOrderTupleScheme();
    }
  }

  private static class PurchaseOrderTupleScheme extends org.apache.thrift.scheme.TupleScheme<PurchaseOrder> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, PurchaseOrder struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeString(struct._id);
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetPoDate()) {
        optionals.set(0);
      }
      if (struct.isSetPoRequestionedBy()) {
        optionals.set(1);
      }
      if (struct.isSetCreatedOn()) {
        optionals.set(2);
      }
      if (struct.isSetUpdatedOn()) {
        optionals.set(3);
      }
      if (struct.isSetUpdatedBy()) {
        optionals.set(4);
      }
      if (struct.isSetStatus()) {
        optionals.set(5);
      }
      if (struct.isSetSellerDLTId()) {
        optionals.set(6);
      }
      if (struct.isSetSellerNumber()) {
        optionals.set(7);
      }
      if (struct.isSetSellerName()) {
        optionals.set(8);
      }
      if (struct.isSetSellerAddress()) {
        optionals.set(9);
      }
      if (struct.isSetSellerTaxId()) {
        optionals.set(10);
      }
      if (struct.isSetBuyerDLTId()) {
        optionals.set(11);
      }
      if (struct.isSetBuyerName()) {
        optionals.set(12);
      }
      if (struct.isSetBuyerTaxId()) {
        optionals.set(13);
      }
      if (struct.isSetBillingAddress()) {
        optionals.set(14);
      }
      if (struct.isSetShipToAddress()) {
        optionals.set(15);
      }
      if (struct.isSetPoAmount()) {
        optionals.set(16);
      }
      if (struct.isSetDocumentMetadata()) {
        optionals.set(17);
      }
      if (struct.isSetPoExpDate()) {
        optionals.set(18);
      }
      if (struct.isSetPoLineItems()) {
        optionals.set(19);
      }
      oprot.writeBitSet(optionals, 20);
      if (struct.isSetPoDate()) {
        oprot.writeI64(struct.poDate);
      }
      if (struct.isSetPoRequestionedBy()) {
        oprot.writeString(struct.poRequestionedBy);
      }
      if (struct.isSetCreatedOn()) {
        oprot.writeI64(struct.createdOn);
      }
      if (struct.isSetUpdatedOn()) {
        oprot.writeI64(struct.updatedOn);
      }
      if (struct.isSetUpdatedBy()) {
        oprot.writeString(struct.updatedBy);
      }
      if (struct.isSetStatus()) {
        oprot.writeString(struct.status);
      }
      if (struct.isSetSellerDLTId()) {
        oprot.writeString(struct.sellerDLTId);
      }
      if (struct.isSetSellerNumber()) {
        oprot.writeString(struct.sellerNumber);
      }
      if (struct.isSetSellerName()) {
        oprot.writeString(struct.sellerName);
      }
      if (struct.isSetSellerAddress()) {
        oprot.writeString(struct.sellerAddress);
      }
      if (struct.isSetSellerTaxId()) {
        oprot.writeString(struct.sellerTaxId);
      }
      if (struct.isSetBuyerDLTId()) {
        oprot.writeString(struct.buyerDLTId);
      }
      if (struct.isSetBuyerName()) {
        oprot.writeString(struct.buyerName);
      }
      if (struct.isSetBuyerTaxId()) {
        oprot.writeString(struct.buyerTaxId);
      }
      if (struct.isSetBillingAddress()) {
        oprot.writeString(struct.billingAddress);
      }
      if (struct.isSetShipToAddress()) {
        oprot.writeString(struct.shipToAddress);
      }
      if (struct.isSetPoAmount()) {
        oprot.writeDouble(struct.poAmount);
      }
      if (struct.isSetDocumentMetadata()) {
        struct.documentMetadata.write(oprot);
      }
      if (struct.isSetPoExpDate()) {
        oprot.writeI64(struct.poExpDate);
      }
      if (struct.isSetPoLineItems()) {
        {
          oprot.writeI32(struct.poLineItems.size());
          for (LineItem _iter4 : struct.poLineItems)
          {
            _iter4.write(oprot);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, PurchaseOrder struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct._id = iprot.readString();
      struct.set_idIsSet(true);
      java.util.BitSet incoming = iprot.readBitSet(20);
      if (incoming.get(0)) {
        struct.poDate = iprot.readI64();
        struct.setPoDateIsSet(true);
      }
      if (incoming.get(1)) {
        struct.poRequestionedBy = iprot.readString();
        struct.setPoRequestionedByIsSet(true);
      }
      if (incoming.get(2)) {
        struct.createdOn = iprot.readI64();
        struct.setCreatedOnIsSet(true);
      }
      if (incoming.get(3)) {
        struct.updatedOn = iprot.readI64();
        struct.setUpdatedOnIsSet(true);
      }
      if (incoming.get(4)) {
        struct.updatedBy = iprot.readString();
        struct.setUpdatedByIsSet(true);
      }
      if (incoming.get(5)) {
        struct.status = iprot.readString();
        struct.setStatusIsSet(true);
      }
      if (incoming.get(6)) {
        struct.sellerDLTId = iprot.readString();
        struct.setSellerDLTIdIsSet(true);
      }
      if (incoming.get(7)) {
        struct.sellerNumber = iprot.readString();
        struct.setSellerNumberIsSet(true);
      }
      if (incoming.get(8)) {
        struct.sellerName = iprot.readString();
        struct.setSellerNameIsSet(true);
      }
      if (incoming.get(9)) {
        struct.sellerAddress = iprot.readString();
        struct.setSellerAddressIsSet(true);
      }
      if (incoming.get(10)) {
        struct.sellerTaxId = iprot.readString();
        struct.setSellerTaxIdIsSet(true);
      }
      if (incoming.get(11)) {
        struct.buyerDLTId = iprot.readString();
        struct.setBuyerDLTIdIsSet(true);
      }
      if (incoming.get(12)) {
        struct.buyerName = iprot.readString();
        struct.setBuyerNameIsSet(true);
      }
      if (incoming.get(13)) {
        struct.buyerTaxId = iprot.readString();
        struct.setBuyerTaxIdIsSet(true);
      }
      if (incoming.get(14)) {
        struct.billingAddress = iprot.readString();
        struct.setBillingAddressIsSet(true);
      }
      if (incoming.get(15)) {
        struct.shipToAddress = iprot.readString();
        struct.setShipToAddressIsSet(true);
      }
      if (incoming.get(16)) {
        struct.poAmount = iprot.readDouble();
        struct.setPoAmountIsSet(true);
      }
      if (incoming.get(17)) {
        struct.documentMetadata = new DocumentReference();
        struct.documentMetadata.read(iprot);
        struct.setDocumentMetadataIsSet(true);
      }
      if (incoming.get(18)) {
        struct.poExpDate = iprot.readI64();
        struct.setPoExpDateIsSet(true);
      }
      if (incoming.get(19)) {
        {
          org.apache.thrift.protocol.TList _list5 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.poLineItems = new java.util.ArrayList<LineItem>(_list5.size);
          @org.apache.thrift.annotation.Nullable LineItem _elem6;
          for (int _i7 = 0; _i7 < _list5.size; ++_i7)
          {
            _elem6 = new LineItem();
            _elem6.read(iprot);
            struct.poLineItems.add(_elem6);
          }
        }
        struct.setPoLineItemsIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

